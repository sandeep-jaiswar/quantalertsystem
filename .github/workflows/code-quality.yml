name: Code Quality & Security

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run code quality checks daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  PYTHONPATH: ${{ github.workspace }}

jobs:
  code-quality:
    name: Code Quality Assessment
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better analysis

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Essential quality tools
        pip install mypy ruff bandit safety

    - name: Create directories
      run: |
        mkdir -p logs data reports

    - name: Run Ruff (Fast Python Linter)
      run: |
        ruff check . --output-format=github --exit-zero || echo "Ruff check completed with issues"
        ruff check . --statistics || echo "Ruff statistics failed"

    - name: Run Black (Code Formatting)
      run: |
        black --check --diff . || echo "Black formatting issues found"

    - name: Run MyPy (Type Checking)
      run: |
        mypy . --ignore-missing-imports --show-error-codes --pretty || echo "MyPy check completed with issues"

    - name: Run Bandit (Security Analysis)
      run: |
        bandit -r . -f json -o reports/bandit-report.json --exclude ./tests || echo "Bandit JSON report failed"
        bandit -r . --exclude ./tests || echo "Bandit check completed with issues"

    - name: Run Safety (Dependency Security Check)
      run: |
        safety check --json --output reports/safety-report.json || echo "Safety JSON report failed"
        safety check || echo "Safety check completed with issues"

    - name: Check for secrets
      uses: trufflesecurity/trufflehog@v3.86.3
      with:
        path: ./
        base: main
        head: HEAD
      continue-on-error: true

    - name: Upload quality reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: code-quality-reports-${{ github.run_number }}
        path: reports/
        retention-days: 30

  complexity-analysis:
    name: Complexity & Maintainability
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install analysis tools
      run: |
        pip install radon xenon vulture

    - name: Cyclomatic Complexity Analysis
      run: |
        radon cc . --min B --show-complexity --total-average
        
    - name: Maintainability Index
      run: |
        radon mi . --min B --show --multi

    - name: Halstead Complexity
      run: |
        radon hal .

    - name: Dead Code Analysis
      run: |
        vulture . --min-confidence 80

  documentation-quality:
    name: Documentation Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install documentation tools
      run: |
        pip install pydocstyle interrogate

    - name: Check docstring style
      run: |
        pydocstyle . --count --explain --source

    - name: Check docstring coverage
      run: |
        interrogate . --verbose --fail-under=80 --ignore-init-method --ignore-magic --ignore-module